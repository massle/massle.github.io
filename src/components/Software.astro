---
import HorizontalCard from "./HorizontalCard.astro";
---
<div class="flex flex-col gap-3">
<HorizontalCard
  title="PFD (Probabilistic Fast Downward)"
  badges={[
    "cpp",
    "python"
  ]}
  links={[
    ["Thesis version", "https://zenodo.org/records/6992688/files/code.zip?download=1",],
    ["JAIR16 version", "/fd-prob-jair.zip"],
  ]}>
  Extension of the <a href="https://www.fast-downward.org" target="_blank"
    class="link link-info">Fast Downward</a> planning system by the support of
  PPDDL encoded MDPs. Features a variety of heuristic search engines (like <span
    class="font-serif">LAO*</span>, <span class="font-serif">LRTDP</span>, <span
    class="font-serif">FRET</span>, <span class="font-serif">i-dual</span>) and
  a variety of heuristics (e.g., based on all-outcomes determinization and the
  large space of classical planning heuristics that readily ship with Fast
  Downward; probabilistic pattern databases; and probabilistic
  occupation-measure heuristics).
</HorizontalCard>

<HorizontalCard
  title="CDL-FD (Conflict-Driven Learning Fast Downward)"
  badges={[
    "cpp",
    "python"
  ]}
  links={[
    ["Thesis version", "https://zenodo.org/records/6992688/files/code.zip?download=1",],
  ]}>
  Extension of the <a href="https://www.fast-downward.org" target="_blank"
    class="link link-info">Fast Downward</a> planning system by <span
    class="italic">conflict-driven learning</span> methods akin to
  conflict-driven clause learning in SAT. In a nutshell, in general state-space
  search, conflicts become <span class="italic">dead ends</span>, i.e., states
  without any solution path. CDL-FD ships variants of all common heuristic
  search algorithm (<span class="font-serif">A*</span>, <span
    class="font-serif">GBFS</span>) and heuristic-guided depth-first searches
  that identify such conflicts while search is running; refining a dead-end
  detector upon each such identification. Multiple dead-end detectors are
  supported (based on critical-path heuristics; dead-end traps; potential
  heuristics; and the state-equation heuristic).
</HorizontalCard>

<HorizontalCard
  title="ASNet Policy Testing"
  badges={[
    "cpp",
  ]}
  links={[
    ["ICAPS22 version", "https://zenodo.org/record/6323289/files/fast_downward_fuzzing.zip?download=1"]
  ]}>
  The Neural-FD based framework for testing ASNet policies.
</HorizontalCard>

<HorizontalCard
  title="PPDDL Benchmark Suite"
  badges={[
    "pddl"
  ]}
  links={[
    ["Thesis version", "https://zenodo.org/records/6992688/files/benchmarks.zip?download=1"],
    ["JAIR16 acyclic", "/ppddl-benchmarks-acyclic.tar.bz2"],
    ["JAIR16 cyclic", "/ppddl-benchmarks-cyclic.tar.bz2"],
  ]}>
Comprehensive set of PPDDL benchmarks composed of benchmarks from the IPPCs,
  Canadian travaler adaptations of resource-constrained classical planning
  benchmarks (NoMystery, Rovers, and TPP), and an MDP encoding of simulated
  network penetration testing. Each domain comes with a limited-budget as well
  as an unlimited-budget version. The suite consists of a suite of <span
    class="italic">acyclic</span> benchmarks (where the state space is acyclic,
  allowing particular algorithm enhancements) and <span
    class="italic">cyclic</span> benchmarks.
</HorizontalCard>
</div>
